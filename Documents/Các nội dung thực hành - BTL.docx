# Tuần 1 - Phân Tích Yêu Cầu

## 1. Actors (Vai trò)

### Người hiến máu
- Đăng nhập/Đăng ký(tài khoản).
- Đăng ký/Hủy đăng ký hiếm máu.
- Xem lịch hẹn hiến máu.
- Xem lịch sử hiến máu.

### Nhân viên y tế
- Đăng nhập/Đăng ký(có mã code riêng do QTV cấp).
- Quản lý lịch hiến máu.
- Xác nhận đăng ký hiến máu.
- Ghi nhận kết quả hiến máu.

### Quản trị viên
- Đăng nhập.
- Quản lý nhân sự.
- Quản lý người hiến máu.
- Quản lý sự kiện hiến máu.
- Quản lý địa điểm hiến máu.

### Hệ thống
- Kiểm tra điều kiện hiến máu (tuổi, sức khỏe, khoảng cách ngày hiến máu trước đó…).
- Gửi thông báo nhắc nhở lịch hẹn.
- Lưu trữ và backup dữ liệu.

---

## 2. Tổng quan hệ thống

### Mục tiêu hệ thống
- Kết nối người hiến máu, nhân viên y tế và ban tổ chức.
- Hỗ trợ quy trình đăng ký, quản lý, nhắc nhở và lưu trữ lịch sử.

### Phạm vi hệ thống
- Đối tượng phục vụ: người hiến máu, nhân viên y tế, quản trị viên.
- Nền tảng: Android / Web / Mobile-first.

### Các ràng buộc
- Cần Internet.
- Phải tuân thủ quy định y tế về bảo mật thông tin cá nhân.

### Giả định và phụ thuộc
- Người dùng có thiết bị kết nối Internet.
- Người hiến máu cung cấp thông tin chính xác khi đăng ký.

---

## 3. Yêu cầu chức năng (Functional Requirements)

- Hệ thống cho phép người hiến máu tạo tài khoản và đăng ký hiến máu trong các sự kiện còn chỗ.
- Người hiến máu có thể hủy đăng ký trong thời gian cho phép.
- Nhân viên y tế có thể quản lý danh sách đăng ký, xác nhận và cập nhật trạng thái hiến máu.
- Quản trị viên có thể quản lý thông tin sự kiện, địa điểm, và người hiến máu.
- Hệ thống gửi thông báo nhắc nhở trước lịch hiến máu ít nhất 1 ngày.
- Hệ thống cho phép người hiến máu tra cứu lịch sử hiến máu của bản thân.

---

## 4. Yêu cầu phi chức năng (Non-functional Requirements)

- Bảo mật: Bảo vệ thông tin cá nhân và y tế, xác thực đăng nhập an toàn.
- Hiệu năng: Thời gian phản hồi tra cứu sự kiện ≤ 2 giây.
- Sẵn sàng: Hệ thống hoạt động ổn định, có thể phục vụ ≥ 500 người dùng cùng lúc.
- Khả năng mở rộng: Có thể mở rộng số lượng sự kiện và địa điểm dễ dàng.
- Dễ dùng: Giao diện rõ ràng, hỗ trợ mobile-first.
- Bảo toàn dữ liệu: Sao lưu định kỳ và khôi phục nhanh khi có sự cố.
- Khả năng truy cập: Hỗ trợ đa ngôn ngữ (Việt – Anh).

# Tuần 2 - Mô hình hóa Use Case và Kịch bản

## 1. Biểu đồ Use Case

![Sơ đồ UseCase](https://github.com/user-attachments/assets/281afe11-c6ea-4d36-9e4f-2a79fa2bea63)

---

## 2. Kịch bản Use Case chi tiết

### 2.1. Use Case: Đăng ký hiến máu
**Actor chính:** Người hiến máu  
**Mục tiêu:** Người hiến máu đăng ký tham gia một đợt hiến máu thành công.  
**Tiền điều kiện:** Người hiến máu đã có tài khoản hoặc thực hiện đăng nhập.  

#### Luồng chính – thành công
1. Người hiến máu mở ứng dụng và chọn chức năng **Đăng ký hiến máu**.  
2. Ứng dụng yêu cầu nhập thông tin (họ tên, ngày sinh, số CMND/CCCD, nhóm máu, lịch sử hiến máu, chọn địa điểm, chọn thời gian,...).  
3. Hệ thống **kiểm tra điều kiện hiến máu** (tuổi, khoảng cách lần hiến trước, tình trạng sức khỏe,...).  
4. Nếu hợp lệ, hệ thống lưu thông tin đăng ký.  
5. Hệ thống hiển thị thông báo: “Đăng ký hiến máu thành công”.  
6. Hệ thống gửi thông báo nhắc nhở trước lịch hẹn.  

#### Trường hợp đặc biệt
- **A1: Người hiến máu không đủ điều kiện**  
  1. Tại bước 3, hệ thống phát hiện điều kiện không đạt (ví dụ: dưới 18 tuổi, chưa đủ 3 tháng từ lần hiến trước,...).  
  2. Hệ thống hiển thị thông báo: “Bạn chưa đủ điều kiện hiến máu.”  
  3. Quay lại màn hình chính.

- **A2: Địa điểm/Thời gian hiến máu đã đầy chỗ**  
  1. Tại bước 2, sau khi chọn địa điểm, hệ thống báo: “Lịch hẹn tại địa điểm này đã đầy.”  
  2. Người hiến máu được yêu cầu chọn địa điểm hoặc thời gian khác.  

---

### 2.2. Use Case: Xác nhận đăng ký hiến máu
**Actor chính:** Nhân viên y tế  
**Mục tiêu:** Xác nhận đăng ký của người hiến máu hợp lệ.  
**Tiền điều kiện:** Người hiến máu đã gửi yêu cầu đăng ký.  

#### Luồng chính – thành công
1. Nhân viên y tế đăng nhập vào hệ thống.  
2. Nhân viên chọn **Danh sách đăng ký hiến máu**.  
3. Nhân viên y tế mở hồ sơ một người hiến máu.  
4. Hệ thống hiển thị thông tin + lịch sử hiến máu.  
5. Nhân viên y tế xác nhận nếu đủ điều kiện.  
6. Hệ thống cập nhật trạng thái: “Đã xác nhận”.  
7. Người hiến máu nhận được thông báo xác nhận.  

#### Trường hợp đặc biệt
- **B1: Người hiến máu không đủ điều kiện**  
  1. Tại bước 4, nhân viên y tế thấy người hiến máu không đạt điều kiện (ví dụ: huyết áp không phù hợp).  
  2. Nhân viên chọn “Từ chối đăng ký”.  
  3. Hệ thống lưu trạng thái và gửi thông báo từ chối đến người hiến máu.  

---

### 2.3. Use Case: Ghi nhận kết quả hiến máu
**Actor chính:** Nhân viên y tế  
**Mục tiêu:** Lưu kết quả hiến máu sau khi người hiến hoàn tất.  

#### Luồng chính – thành công
1. Sau khi hiến máu, nhân viên y tế mở ứng dụng, chọn **Ghi nhận kết quả hiến máu**.  
2. Nhập thông tin: số lượng máu lấy được, nhóm máu, tình trạng sau hiến.  
3. Hệ thống lưu kết quả vào hồ sơ người hiến máu.  
4. Hệ thống cập nhật **lịch sử hiến máu** cho người hiến.  
5. Hệ thống tự động backup dữ liệu.  

#### Trường hợp đặc biệt
- **C1: Lỗi khi lưu kết quả**  
  1. Tại bước 3, hệ thống gặp lỗi kết nối.  
  2. Hệ thống thông báo: “Không thể lưu kết quả, vui lòng thử lại.”  
  3. Nhân viên y tế có thể lưu lại sau.  

# Tuần 3 - Thiết kế Lớp và Tạo cơ sở code

## 1. Thiết kế Biểu đồ Lớp (Class Diagram)

### Các lớp chính
- **NguoiHienMau**
  - Thuộc tính: maNguoiHien, hoTen, ngaySinh, gioiTinh, nhomMau, lichSuHienMau
  - Phương thức: dangKyHienMau(), huyDangKy(), xemLichHen(), xemLichSu()

- **NhanVienYTe**
  - Thuộc tính: maNhanVien, hoTen, chucVu, maCode
  - Phương thức: quanLyLichHienMau(), xacNhanDangKy(), ghiNhanKetQua()

- **QuanTriVien**
  - Thuộc tính: maQTV, hoTen, taiKhoan
  - Phương thức: quanLyNhanSu(), quanLyNguoiHienMau(), quanLySuKien(), quanLyDiaDiem()

- **SuKienHienMau**
  - Thuộc tính: maSuKien, tenSuKien, ngayToChuc, diaDiem, soLuongToiDa
  - Phương thức: themNguoiHienMau(), kiemTraChoTrong()

- **DangKy**
  - Thuộc tính: maDangKy, ngayDangKy, trangThai
  - Quan hệ: Liên kết giữa NguoiHienMau và SuKienHienMau

- **KetQuaHienMau**
  - Thuộc tính: maKetQua, soLuongMau, tinhTrangSauHien
  - Quan hệ: Gắn với NguoiHienMau và SuKienHienMau

- **HeThong**
  - Thuộc tính: thongBao, duLieuSaoLuu
  - Phương thức: kiemTraDieuKien(), guiThongBao(), luuTruBackup()

### Mỗi quan hệ giữa các lớp

- **QuanTriVien – NhanVienYTe**:  
  Một Quản trị viên có thể quản lý nhiều Nhân viên y tế (1–n).

- **QuanTriVien – NguoiHienMau**:  
  Một Quản trị viên có thể quản lý nhiều Người hiến máu (1–n).

- **QuanTriVien – SuKienHienMau**:  
  Một Quản trị viên có thể tạo/quản lý nhiều Sự kiện hiến máu (1–n).

- **QuanTriVien – DiaDiem**:  
  Một Quản trị viên có thể quản lý nhiều Địa điểm hiến máu (1–n).

- **SuKienHienMau – DiaDiem**:  
  Một sự kiện hiến máu diễn ra tại một địa điểm (n–1).  
  Một địa điểm có thể tổ chức nhiều sự kiện (1–n).

- **NguoiHienMau – DangKy – SuKienHienMau**:  
  Người hiến máu đăng ký tham gia sự kiện thông qua bảng trung gian **DangKy** (n–m).  
  - Một người có thể đăng ký nhiều sự kiện.  
  - Một sự kiện có nhiều người đăng ký.

- **NhanVienYTe – KetQuaHienMau – NguoiHienMau/SuKienHienMau**:  
  Nhân viên y tế ghi nhận kết quả hiến máu (1–n).  
  - Mỗi kết quả thuộc về một người hiến máu và một sự kiện.  
  - Một sự kiện có thể có nhiều kết quả hiến máu.

- **HeThong – SuKienHienMau**:  
  Hệ thống lưu trữ danh sách sự kiện và kiểm tra điều kiện đăng ký (1–n).

- **HeThong – NguoiHienMau**:  
  Hệ thống kiểm tra điều kiện hiến máu và gửi thông báo cho từng người (1–n).

### Biểu đồ Lớp (Class Diagram):

![Class Diagram](https://github.com/user-attachments/assets/eb5b1bf8-6087-4264-819f-466d2d55780e)


### File biểu đồ: 

[ClassDiagram.drawio](https://github.com/user-attachments/files/22123579/ClassDiagram.drawio)

---

## 2. Cơ sở Code (Mobile/Kotlin)
